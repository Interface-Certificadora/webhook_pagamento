
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.13.0
 * Query Engine version: 361e86d0ea4987e9f53a565309b3eed797a6bcbd
 */
Prisma.prismaVersion = {
  client: "6.13.0",
  engine: "361e86d0ea4987e9f53a565309b3eed797a6bcbd"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AlertScalarFieldEnum = {
  id: 'id',
  solicitacao_id: 'solicitacao_id',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  descricao: 'descricao',
  corretor_id: 'corretor_id'
};

exports.Prisma.BugScalarFieldEnum = {
  id: 'id',
  descricao: 'descricao',
  status: 'status',
  createAt: 'createAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ChamadoScalarFieldEnum = {
  id: 'id',
  descricao: 'descricao',
  status: 'status',
  idUser: 'idUser',
  createAt: 'createAt',
  updatedAt: 'updatedAt',
  solicitacaoId: 'solicitacaoId',
  images: 'images',
  chat: 'chat',
  temp: 'temp',
  departamento: 'departamento',
  dth_qru: 'dth_qru',
  prioridade: 'prioridade',
  titulo: 'titulo'
};

exports.Prisma.ConstrutoraScalarFieldEnum = {
  id: 'id',
  cnpj: 'cnpj',
  razaosocial: 'razaosocial',
  fantasia: 'fantasia',
  tel: 'tel',
  email: 'email',
  obs: 'obs',
  status: 'status',
  valor_cert: 'valor_cert',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  atividade: 'atividade',
  Msg_Boas_Vindas: 'Msg_Boas_Vindas',
  responsavel: 'responsavel'
};

exports.Prisma.DiretoScalarFieldEnum = {
  id: 'id',
  solicitacaoId: 'solicitacaoId',
  descricao: 'descricao',
  createAt: 'createAt'
};

exports.Prisma.DiretoTagScalarFieldEnum = {
  id: 'id',
  diretoId: 'diretoId',
  descricao: 'descricao',
  createAt: 'createAt'
};

exports.Prisma.EmpreendimentoScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  endereco: 'endereco',
  cidade: 'cidade',
  estado: 'estado',
  cep: 'cep',
  obs: 'obs',
  status: 'status',
  tag: 'tag',
  construtoraId: 'construtoraId',
  responsavelId: 'responsavelId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FinanceiroScalarFieldEnum = {
  id: 'id',
  cnpj: 'cnpj',
  razaosocial: 'razaosocial',
  fantasia: 'fantasia',
  tel: 'tel',
  email: 'email',
  obs: 'obs',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  direto: 'direto',
  responsavel: 'responsavel',
  valor_cert: 'valor_cert'
};

exports.Prisma.FinanceiroConstrutoraScalarFieldEnum = {
  financeiroId: 'financeiroId',
  construtoraId: 'construtoraId'
};

exports.Prisma.FinanceiroEmpreendimentoScalarFieldEnum = {
  financeiroId: 'financeiroId',
  empreendimentoId: 'empreendimentoId'
};

exports.Prisma.LogsScalarFieldEnum = {
  id: 'id',
  User: 'User',
  EffectId: 'EffectId',
  descricao: 'descricao',
  createAt: 'createAt',
  updatedAt: 'updatedAt',
  rota: 'rota'
};

exports.Prisma.SolicitacaoScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  email: 'email',
  cpf: 'cpf',
  telefone: 'telefone',
  telefone2: 'telefone2',
  dt_nascimento: 'dt_nascimento',
  id_fcw: 'id_fcw',
  cnh: 'cnh',
  ativo: 'ativo',
  rela_quest: 'rela_quest',
  distrato: 'distrato',
  dt_distrato: 'dt_distrato',
  status_aprovacao: 'status_aprovacao',
  distrato_id: 'distrato_id',
  andamento: 'andamento',
  type_validacao: 'type_validacao',
  dt_aprovacao: 'dt_aprovacao',
  hr_aprovacao: 'hr_aprovacao',
  dt_agendamento: 'dt_agendamento',
  hr_agendamento: 'hr_agendamento',
  estatos_pgto: 'estatos_pgto',
  valorcd: 'valorcd',
  situacao_pg: 'situacao_pg',
  freqSms: 'freqSms',
  alertanow: 'alertanow',
  dt_criacao_now: 'dt_criacao_now',
  statusAtendimento: 'statusAtendimento',
  pause: 'pause',
  corretorId: 'corretorId',
  construtoraId: 'construtoraId',
  financeiroId: 'financeiroId',
  empreendimentoId: 'empreendimentoId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  relacionamentos: 'relacionamentos',
  dt_revogacao: 'dt_revogacao',
  direto: 'direto',
  txid: 'txid',
  pixCopiaECola: 'pixCopiaECola',
  imagemQrcode: 'imagemQrcode',
  uploadCnh: 'uploadCnh',
  uploadRg: 'uploadRg',
  obs: 'obs',
  pg_andamento: 'pg_andamento',
  pg_date: 'pg_date',
  pg_status: 'pg_status'
};

exports.Prisma.SuporteScalarFieldEnum = {
  id: 'id',
  tag: 'tag',
  descricao: 'descricao',
  solicitacao: 'solicitacao',
  imgSuspensa: 'imgSuspensa',
  createAt: 'createAt',
  updatedAt: 'updatedAt',
  urlveiw: 'urlveiw'
};

exports.Prisma.SystemMessageScalarFieldEnum = {
  id: 'id',
  tipo: 'tipo',
  message: 'message',
  createAt: 'createAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TagScalarFieldEnum = {
  id: 'id',
  solicitacao: 'solicitacao',
  descricao: 'descricao',
  createAt: 'createAt'
};

exports.Prisma.TagListScalarFieldEnum = {
  id: 'id',
  label: 'label',
  createdAt: 'createdAt'
};

exports.Prisma.TermoScalarFieldEnum = {
  id: 'id',
  termo: 'termo',
  politica: 'politica',
  createAt: 'createAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  username: 'username',
  password: 'password',
  password_key: 'password_key',
  telefone: 'telefone',
  email: 'email',
  cpf: 'cpf',
  nome: 'nome',
  cargo: 'cargo',
  hierarquia: 'hierarquia',
  reset_password: 'reset_password',
  status: 'status',
  sms_relat: 'sms_relat',
  termos: 'termos',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  role: 'role'
};

exports.Prisma.UserConstrutoraScalarFieldEnum = {
  userId: 'userId',
  construtoraId: 'construtoraId'
};

exports.Prisma.UserEmpreendimentoScalarFieldEnum = {
  userId: 'userId',
  empreendimentoId: 'empreendimentoId'
};

exports.Prisma.UserFinanceiroScalarFieldEnum = {
  userId: 'userId',
  financeiroId: 'financeiroId'
};

exports.Prisma.VideosFaqScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  url: 'url',
  createAt: 'createAt',
  tag: 'tag'
};

exports.Prisma.Relatorio_financeiroScalarFieldEnum = {
  id: 'id',
  protocolo: 'protocolo',
  situacao_pg: 'situacao_pg',
  nota_fiscal: 'nota_fiscal',
  start: 'start',
  end: 'end',
  statusNota: 'statusNota',
  createAt: 'createAt',
  updatedAt: 'updatedAt',
  construtoraId: 'construtoraId',
  total_cert: 'total_cert',
  valorTotal: 'valorTotal',
  solicitacao: 'solicitacao',
  pdf: 'pdf',
  xlsx: 'xlsx',
  modelo: 'modelo',
  empreendimentoId: 'empreendimentoId',
  dt_pg: 'dt_pg',
  status: 'status'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};


exports.Prisma.ModelName = {
  Alert: 'Alert',
  Bug: 'Bug',
  Chamado: 'Chamado',
  Construtora: 'Construtora',
  Direto: 'Direto',
  DiretoTag: 'DiretoTag',
  Empreendimento: 'Empreendimento',
  Financeiro: 'Financeiro',
  FinanceiroConstrutora: 'FinanceiroConstrutora',
  FinanceiroEmpreendimento: 'FinanceiroEmpreendimento',
  Logs: 'Logs',
  Solicitacao: 'Solicitacao',
  Suporte: 'Suporte',
  SystemMessage: 'SystemMessage',
  Tag: 'Tag',
  TagList: 'TagList',
  Termo: 'Termo',
  User: 'User',
  UserConstrutora: 'UserConstrutora',
  UserEmpreendimento: 'UserEmpreendimento',
  UserFinanceiro: 'UserFinanceiro',
  VideosFaq: 'VideosFaq',
  relatorio_financeiro: 'relatorio_financeiro'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
